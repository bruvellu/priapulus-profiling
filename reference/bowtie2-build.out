Settings:
  Output files: "reference/Pc_ref.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  reference/Pc_ref.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30537082
Using parameters --bmax 22902812 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22902812 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:10
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:07
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:05
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:05
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:06
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:05
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Avg bucket size: 1.52685e+07 (target: 22902811)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 19899567
  (Using difference cover)
  Sorting block time: 00:01:05
Returning block of 19899568
Getting block 2 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 17390297
  (Using difference cover)
  Sorting block time: 00:00:56
Returning block of 17390298
Getting block 3 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 22867993
  (Using difference cover)
  Sorting block time: 00:01:14
Returning block of 22867994
Getting block 4 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 19632841
  (Using difference cover)
  Sorting block time: 00:01:03
Returning block of 19632842
Getting block 5 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 9770902
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 9770903
Getting block 6 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 15462801
  (Using difference cover)
  Sorting block time: 00:00:49
Returning block of 15462802
Getting block 7 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 12644728
  (Using difference cover)
  Sorting block time: 00:00:41
Returning block of 12644729
Getting block 8 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 4479194
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 4479195
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 32792407
fchr[G]: 60981164
fchr[T]: 89561605
fchr[$]: 122148330
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 49200754 bytes to primary EBWT file: reference/Pc_ref.1.bt2
Wrote 30537088 bytes to secondary EBWT file: reference/Pc_ref.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 122148330
    bwtLen: 122148331
    sz: 30537083
    bwtSz: 30537083
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7634271
    offsSz: 30537084
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 636190
    numLines: 636190
    ebwtTotLen: 40716160
    ebwtTotSz: 40716160
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:07:53
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:02
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30537082
Using parameters --bmax 22902812 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22902812 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:10
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:06
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:06
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:06
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.52685e+07 (target: 22902811)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 15501754
  (Using difference cover)
  Sorting block time: 00:00:55
Returning block of 15501755
Getting block 2 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 18238102
  (Using difference cover)
  Sorting block time: 00:01:06
Returning block of 18238103
Getting block 3 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 17416706
  (Using difference cover)
  Sorting block time: 00:01:01
Returning block of 17416707
Getting block 4 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:02
  Sorting block of length 15110537
  (Using difference cover)
  Sorting block time: 00:00:54
Returning block of 15110538
Getting block 5 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 15553354
  (Using difference cover)
  Sorting block time: 00:00:53
Returning block of 15553355
Getting block 6 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 17102995
  (Using difference cover)
  Sorting block time: 00:01:03
Returning block of 17102996
Getting block 7 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:03
  Sorting block of length 20198899
  (Using difference cover)
  Sorting block time: 00:01:12
Returning block of 20198900
Getting block 8 of 8
  Reserving size (22902812) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:01
  Sorting block of length 3025976
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 3025977
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 32792407
fchr[G]: 60981164
fchr[T]: 89561605
fchr[$]: 122148330
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 49200754 bytes to primary EBWT file: reference/Pc_ref.rev.1.bt2
Wrote 30537088 bytes to secondary EBWT file: reference/Pc_ref.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 122148330
    bwtLen: 122148331
    sz: 30537083
    bwtSz: 30537083
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7634271
    offsSz: 30537084
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 636190
    numLines: 636190
    ebwtTotLen: 40716160
    ebwtTotSz: 40716160
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:08:32
